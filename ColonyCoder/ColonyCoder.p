{[j=15-/40]}{$R-}PROGRAM ColonyCoder;	USES		Memtypes, Quickdraw, OSIntf, ToolIntf, PackIntf, PaletteMgr;	TYPE		CodeBook	=	ARRAY [1..4, 1..4, 1..4, 1..4] OF LongInt;		CodeBookPtr	=	^CodeBook;		CodeBookHdl	=	^CodeBookPtr;			VAR		curIcons	:	ARRAY [1..4] OF Integer;		atIcon		:	Integer;		myCodes		:	CodeBookHdl;		myWindow	:	WindowPtr;		doneFlag	:	Boolean;		dragRect	:	Rect;		myEvent		:	EventRecord;		whichWindow	:	WindowPtr;		aStr		:	Str255;		aRect		:	Rect;		chosen		:	Integer;		BEGIN	InitGraf(@thePort);	InitFonts;	FlushEvents(everyEvent, 0);	InitWindows;	InitMenus;	TEInit;	InitDialogs(NIL);	InitCursor;	WITH ScreenBits.bounds DO		SetRect(dragRect, 4, 24, right - 4, bottom - 4);	doneFlag := FALSE;	atIcon := 1;	curIcons[1] := 1;	curIcons[2] := 2;	curIcons[3] := 3;	curIcons[4] := 4;	myWindow := GetNewWindow(128, NIL, Pointer(-1));		myCodes := CodeBookHdl(GetResource('CLNY', 128));		REPEAT		SystemTask;		IF GetNextEvent(everyEvent, myEvent) THEN			CASE myEvent.what OF					mouseDown:					CASE FindWindow(myEvent.where, whichWindow) OF							inSysWindow: SystemClick(myEvent, whichWindow);							inMenuBar: ;							inDrag: DragWindow(whichWindow, myEvent.where, dragRect);							inGoAway : 							IF TrackGoAway(myWindow, myEvent.where) THEN								doneFlag := True;						inGrow: ;												inContent: BEGIN							IF whichWindow <> frontWindow THEN								SelectWindow(whichWindow)							ELSE BEGIN								GlobalToLocal(myEvent.where);								chosen := 0;								SetRect(aRect, 10, 10, 42, 42);								IF PtInRect(myEvent.where, aRect) THEN									chosen := 1;								SetRect(aRect, 50, 10, 82, 42);								IF PtInRect(myEvent.where, aRect) THEN									chosen := 2;								SetRect(aRect, 90, 10, 122, 42);								IF PtInRect(myEvent.where, aRect) THEN									chosen := 3;								SetRect(aRect, 130, 10, 162, 42);								IF PtInRect(myEvent.where, aRect) THEN									chosen := 4;								IF chosen > 0 THEN BEGIN									curIcons[atIcon] := chosen;									CASE atIcon OF										1 : SetRect(aRect, 10, 50, 42, 82);										2 : SetRect(aRect, 50, 50, 82, 82);										3 : SetRect(aRect, 90, 50, 122, 82);										4 : SetRect(aRect, 130, 50, 162, 82);									END;									PlotIcon(aRect, GetResource('ICON', 127+chosen));									FrameRect(aRect);									SetRect(aRect, aRect.left, aRect.bottom+1, aRect.right, aRect.bottom+4);									EraseRect(aRect);									atIcon := atIcon + 1;									IF atIcon > 4 THEN atIcon := 1;															CASE atIcon OF										1 : MoveTo(10, 83);										2 : MoveTo(50, 83);										3 : MoveTo(90, 83);										4 : MoveTo(130, 83);									END;									PenSize(2, 2);									Line(30, 0);									PenSize(1, 1);																		IF atIcon = 1 THEN BEGIN										NumToString(myCodes^^[curIcons[1], curIcons[2], curIcons[3], curIcons[4]], aStr);										WHILE Length(aStr) < 6 DO											aStr := CONCAT('0', aStr);										MoveTo(10, 120);										DrawString(aStr);									END ELSE BEGIN										SetRect(aRect, 10, 85, 1000, 130);										EraseRect(aRect);									END;								END;							END;						END;					END;					updateEvt:					IF WindowPtr(myEvent.message) = myWindow THEN BEGIN						BeginUpdate(WindowPtr(myEvent.message));						SetPort(myWindow);						EraseRect(myWindow^.portRect);						SetRect(aRect, 10, 10, 42, 42);						PlotIcon(aRect, GetResource('ICON', 128));						SetRect(aRect, 50, 10, 82, 42);						PlotIcon(aRect, GetResource('ICON', 129));						SetRect(aRect, 90, 10, 122, 42);						PlotIcon(aRect, GetResource('ICON', 130));						SetRect(aRect, 130, 10, 162, 42);						PlotIcon(aRect, GetResource('ICON', 131));						SetRect(aRect, 10, 50, 42, 82);						PlotIcon(aRect, GetResource('ICON', curIcons[1]+127));						FrameRect(aRect);						SetRect(aRect, 50, 50, 82, 82);						PlotIcon(aRect, GetResource('ICON', curIcons[2]+127));						FrameRect(aRect);						SetRect(aRect, 90, 50, 122, 82);						PlotIcon(aRect, GetResource('ICON', curIcons[3]+127));						FrameRect(aRect);						SetRect(aRect, 130, 50, 162, 82);						PlotIcon(aRect, GetResource('ICON', curIcons[4]+127));						FrameRect(aRect);												CASE atIcon OF							1 : MoveTo(10, 83);							2 : MoveTo(50, 83);							3 : MoveTo(90, 83);							4 : MoveTo(130, 83);						END;						PenSize(2, 2);						Line(30, 0);						PenSize(1, 1);												IF atIcon = 1 THEN BEGIN							NumToString(myCodes^^[curIcons[1], curIcons[2], curIcons[3], curIcons[4]], aStr);							WHILE Length(aStr) < 6 DO								aStr := CONCAT('0', aStr);							MoveTo(10, 120);							DrawString(aStr);						END;						EndUpdate(WindowPtr(myEvent.message));					END;				END;	UNTIL doneFlag;END.